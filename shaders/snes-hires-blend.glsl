// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)


struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
};

vec4 _oPosition1;
uniform mat4 MVPMatrix;
vec4 _r0002;
attribute vec4 VertexCoord;
attribute vec4 TexCoord;
varying vec4 TEX0;

 

         mat4 transpose_(mat4 matrix)
         {
            mat4 ret;
            for (int i = 0; i != 4; i++)
               for (int j = 0; j != 4; j++)
                  ret[i][j] = matrix[j][i];

            return ret;
         }
         
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    mat4 MVPMatrix_ = transpose_(MVPMatrix);

    vec2 _oTex;

    _r0002.x = dot(MVPMatrix_[0], VertexCoord);
    _r0002.y = dot(MVPMatrix_[1], VertexCoord);
    _r0002.z = dot(MVPMatrix_[2], VertexCoord);
    _r0002.w = dot(MVPMatrix_[3], VertexCoord);
    _oPosition1 = _r0002;
    _oTex = TexCoord.xy;
    gl_Position = _r0002;
    TEX0.xy = TexCoord.xy;
} 
#elif defined(FRAGMENT)
#ifdef GL_ES
precision mediump float;
#endif


struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
};

vec4 _TMP0;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _c0004;
varying vec4 TEX0;

 
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{

    vec2 _ps;
    vec4 _l;
    vec4 _r;

    _ps = vec2(float((1.00000000E+000/TextureSize).x), float((1.00000000E+000/TextureSize).y));
    _c0004 = vec2(TEX0.x - float(_ps.x), TEX0.y);
    _l = texture2D(Texture, _c0004);
    _r = texture2D(Texture, TEX0.xy);
    if (InputSize.x > 2.56000000E+002) { 
        _TMP0 = _l + 5.00000000E-001*(_r - _l);
    } else {
        _TMP0 = _r;
    } 
    gl_FragColor = _TMP0;
    return;
} 
#endif
